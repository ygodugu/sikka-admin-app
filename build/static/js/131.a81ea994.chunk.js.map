{"version":3,"file":"static/js/131.a81ea994.chunk.js","mappings":"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","sources":["axiosInstance.js","pages/Chart/ViewPurchasesLineChart.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\naxiosInstance.interceptors.request.use(\n    function (config) {\n        const token = localStorage.getItem('token')\n        if (token) {\n            config.headers['Authorization'] = 'Bearer ' + token\n        }\n        return config;\n    },\n    function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    function (response) {\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);","import React, { useState } from 'react';\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { axiosInstance } from \"../../axiosInstance\";\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst fetchPurchases = () => {\r\n\r\n    return axiosInstance\r\n        .get(`/cikka-purchases?pageIndex=0&pageSize=200&sortBy=createdAt`)\r\n        .then((res) => res.data);\r\n};\r\n\r\nexport const ViewPurchasesLineChart = () => {\r\n    const { isLoading, data, refetch } = useQuery({\r\n        queryKey: [\"purchases\"],\r\n        queryFn: () => fetchPurchases(),\r\n        keepPreviousData: true,\r\n    });\r\n\r\n    // Function to generate labels dynamically based on date difference from today\r\n    const generateLabels = (numDays) => {\r\n        const labels = [];\r\n        const today = new Date();\r\n        for (let i = numDays - 1; i >= 0; i--) {\r\n            const date = new Date(today);\r\n            date.setDate(date.getDate() - i);\r\n            const formattedDate = date.toLocaleDateString('en-US', { day: 'numeric', month: 'short' }); // Format date as 'Apr 18'\r\n            labels.push(`Day ${numDays - i}: ${formattedDate}`);\r\n        }\r\n        return labels;\r\n    };\r\n\r\n    const [numDays, setNumDays] = useState(10); // State to manage the number of days\r\n\r\n    // Function to filter data for the selected number of days\r\n    const filterData = (userData, numDays) => {\r\n        if (!userData || !userData.data) return [];\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        const startDate = new Date(today);\r\n        startDate.setDate(startDate.getDate() - (numDays - 1)); // Calculate start date based on the selected number of days\r\n\r\n        const filteredData = Array.from({ length: numDays }, (_, index) => {\r\n            const currentDate = new Date(startDate);\r\n            currentDate.setDate(currentDate.getDate() + index); // Add index to start date to get the current date\r\n\r\n            const datasetsOnDay = userData.data.filter(item => {\r\n                const createdAtDate = new Date(item.createdAt.split('T')[0]);\r\n                return createdAtDate.toDateString() === currentDate.toDateString();\r\n            });\r\n\r\n            return datasetsOnDay.length;\r\n        });\r\n\r\n        return filteredData;\r\n    };\r\n\r\n    const filteredData = isLoading || !data ? [] : filterData(data, numDays); // Filter data based on the selected number of days\r\n    const xValues = generateLabels(numDays); // Generate labels based on the selected number of days\r\n    const yValues = filteredData;\r\n\r\n    const dataChart = {\r\n        labels: xValues,\r\n        datasets: [\r\n            {\r\n                label: 'Purchases',\r\n                data: yValues,\r\n                backgroundColor: 'rgba(5, 225, 255, 0.5)',\r\n                borderColor: '#05e1ff',\r\n                pointRadius: 5, // Adjust point radius\r\n                tension: 0.4, // Adjust line tension for smoothness\r\n            }\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            x: {\r\n                type: 'category',\r\n                grid: {\r\n                    display: false,\r\n                },\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                position: 'top',\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Purchases createdAt'\r\n            },\r\n        },\r\n        elements: {\r\n            point: {\r\n                radius: 0, // Hide points\r\n            },\r\n        },\r\n        hover: {\r\n            mode: 'nearest',\r\n            intersect: false,\r\n        },\r\n        interaction: {\r\n            mode: 'index',\r\n            intersect: false,\r\n        },\r\n    };\r\n\r\n\r\n    // Function to handle dropdown change\r\n    const handleDropdownChange = (e) => {\r\n        const selectedDays = parseInt(e.target.value);\r\n        setNumDays(selectedDays);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row heading-add\">\r\n                        <aside className=\"col-sm-10 mt-3 mb-3\">\r\n                            <NavLink to={`/Dashboard`}>\r\n                                <i className=\"fe fe-arrow-left-circle fe-24\"></i>\r\n                            </NavLink>\r\n                        </aside>\r\n                        <aside className=\"col-sm-9\">\r\n                            <h2 className=\"mb-0 page-title\">View Purchases detalies</h2>\r\n                        </aside>\r\n                        <aside className=\"col-sm-3 mt-2  add-sec\">\r\n                            <select className=\"form-control\" style={{ background: \"white\" }} aria-label=\"select\" onChange={handleDropdownChange} value={numDays}>\r\n                                <option value=\"10\">Choose a Type</option>\r\n                                <option value=\"20\">Last 20 day's</option>\r\n                                <option value=\"30\">Last 30 day's</option>\r\n                                <option value=\"45\">Last 45 day's</option>\r\n                                <option value=\"60\">Last 60 day's</option>\r\n                                <option value=\"90\">Last 90 day's</option>\r\n                            </select>\r\n                        </aside>\r\n                    </div>\r\n                    <div className=\"row my-2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card shadow\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <h5 className=\"card-title\">Cikka Balance Details</h5> */}\r\n                                    <div className=\"row\">\r\n                                        <Line data={dataChart} options={options} className='p-3' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","ViewPurchasesLineChart","_useQuery","useQuery","queryKey","queryFn","get","then","res","data","keepPreviousData","isLoading","_useState","refetch","useState","_useState2","_slicedToArray","numDays","setNumDays","filteredData","userData","today","Date","setHours","startDate","setDate","getDate","Array","from","length","_","index","currentDate","filter","item","createdAt","split","toDateString","filterData","xValues","labels","i","date","formattedDate","toLocaleDateString","day","month","push","concat","generateLabels","dataChart","datasets","label","backgroundColor","borderColor","pointRadius","tension","_jsx","_Fragment","children","className","_jsxs","NavLink","to","style","background","onChange","e","selectedDays","parseInt","target","value","Line","options","responsive","scales","x","type","grid","display","plugins","legend","position","title","text","elements","point","radius","hover","mode","intersect","interaction"],"sourceRoot":""}