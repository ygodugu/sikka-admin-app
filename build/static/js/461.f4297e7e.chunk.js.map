{"version":3,"file":"static/js/461.f4297e7e.chunk.js","mappings":"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","sources":["axiosInstance.js","components/CustomPagination.js","components/DateFormate.js","components/Status.js","pages/Purchases/Purchases.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\naxiosInstance.interceptors.request.use(\n    function (config) {\n        const token = localStorage.getItem('token')\n        if (token) {\n            config.headers['Authorization'] = 'Bearer ' + token\n        }\n        return config;\n    },\n    function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    function (response) {\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);","import Pagination from \"react-js-pagination\"\n\nexport const CustomPagination = ({ page, pageSize, data, setPage }) => {\n    return (\n        <div className=\"row pagin-sec\">\n            <div className=\"col-sm-12 col-md-5\">\n                <div className=\"dataTables_info\" role=\"status\" aria-live=\"polite\">\n                    {`Showing ${page * pageSize + 1} to  ${(page * pageSize) + data.data.length} of ${data.count} entries`}\n                </div>\n            </div>\n            <div className=\"col-sm-12 col-md-7\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Pagination\n                    itemClass=\"page-item\"\n                    prevPageText=\"Previous\"\n                    nextPageText=\"Next\"\n                    linkClass=\"page-link\"\n                    activePage={page + 1}\n                    itemsCountPerPage={pageSize}\n                    totalItemsCount={data.count}\n                    pageRangeDisplayed={5}\n                    hideFirstLastPages={true}\n                    onChange={(page) => setPage(page - 1)}\n                />\n\n            </div>\n        </div>\n    )\n}","export const DateFormate = ({ dateTime }) => {\n    const date = new Date(dateTime);\n\n    const options = {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n    };\n\n    const formattedDate = date.toLocaleString('en-GB', options);\n\n    return (\n        <span>{formattedDate}</span>\n    )\n}","export const Status = (props) => {\n    if (props.code === null) {\n        return (\n            <span className=\"badge badge-pill badge-warning\">Null</span>\n        )\n    }\n\n    if (props.code === 0) {\n        return (\n            <span className=\"badge badge-pill badge-danger\">Deleted</span>\n        )\n    }\n    if (props.code === 1) {\n        return (\n            <span className=\"badge badge-pill badge-success\">Active</span>\n        )\n    }\n\n    if (props.code === 2) {\n        return (\n            <span className=\"badge badge-pill badge-warning\">Hold</span>\n        )\n    }\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { axiosInstance } from \"../../axiosInstance\";\r\nimport { CustomPagination } from \"../../components/CustomPagination\";\r\nimport { DateFormate } from \"../../components/DateFormate\";\r\nimport { Status } from \"../../components/Status\";\r\n\r\n\r\nconst fetchPurchases = (pageIndex = 0, pageSize = 20, selectValue, selectValueID, selectValueOrder, selectValueStatus) => {\r\n  return axiosInstance\r\n    .get(`/cikka-purchases?pageIndex=${pageIndex}&pageSize=${pageSize}&purchaseStatus=${selectValue}&sortBy=${selectValueID}&sortOrder=${selectValueOrder}&status=${selectValueStatus}`)\r\n    .then((res) => res.data);\r\n};\r\n\r\n\r\nexport const Purchases = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [selectValueID, setSelectValueID] = useState(\"\");\r\n  const [selectValueOrder, setSelectValueOrder] = useState(\"\");\r\n  const [selectValueStatus, setSelectValueStatus] = useState(\"\");\r\n  const [selectValue, setSelectValue] = useState(\"\");\r\n  const [showError, setShowError] = useState(false);\r\n  const pageSize = 20;\r\n  const { data, refetch, isLoading } = useQuery({\r\n    queryKey: [\"Purchases\", page, selectValue, selectValueID, selectValueOrder, selectValueStatus],\r\n    queryFn: () => fetchPurchases(page, pageSize, selectValue, selectValueID, selectValueOrder, selectValueStatus),\r\n    keepPreviousData: true,\r\n  });\r\n\r\n  const handleSelectChange = (event) => {\r\n    const newSelect = event.target.value;\r\n    setSelectValue(newSelect);\r\n    console.log(newSelect);\r\n    refetch();\r\n  };\r\n\r\n  const handleSelectIDChange = (event) => {\r\n    const newSelectID = event.target.value;\r\n    setSelectValueID(newSelectID);\r\n    console.log(newSelectID);\r\n    refetch();\r\n  };\r\n\r\n  const handleSelectOrderChange = (event) => {\r\n    const newSelectOrder = event.target.value;\r\n    setSelectValueOrder(newSelectOrder);\r\n    console.log(newSelectOrder);\r\n    refetch();\r\n  };\r\n\r\n  const handleSelectStatusChange = (event) => {\r\n    const newSelectStatus = event.target.value;\r\n    setSelectValueStatus(newSelectStatus);\r\n    console.log(newSelectStatus);\r\n    refetch();\r\n  };\r\n\r\n  \r\n  const [usersData, setUsersData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"/users?pageIndex=0&pageSize=800\")\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setUsersData(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching categories:\", error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row heading-add\">\r\n            <aside className=\"ml-2 mr-2\">\r\n              <h2 className=\"mb-0 page-title\">Cikka Purchases</h2>\r\n            </aside>\r\n            {/* <form className=\"form-inline  mr-auto searchform\">\r\n              <input\r\n                className=\"form-control mr-sm-2 border-0\"\r\n                onChange={handleSearchPurchaseValueChange}\r\n                type=\"number\"\r\n                style={{ background: \"white\" }}\r\n                placeholder=\"Search Purchase Value\"\r\n                aria-label=\"Search\"\r\n              />\r\n            </form> */}\r\n          </div>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <aside className=\"col-md-4 mt-2 mt-md-0 mb-2 mb-md-0\">\r\n              <select className=\"form-control\" onChange={handleSelectChange} style={{ background: \"white\" }} aria-label=\"select\">\r\n                <option value=\"\">PurchaseStatus</option>\r\n                <option value=\"CANCELLED\">CANCELLED</option>\r\n                <option value=\"INITIATED\">INITIATED</option>\r\n                <option value=\"PURCHASED\">PURCHASED</option>\r\n              </select>\r\n            </aside>\r\n\r\n            <aside className=\"col-md-4 mt-2 mt-md-0 mb-2 mb-md-0\">\r\n              <select className=\"form-control\" onChange={handleSelectIDChange} style={{ background: \"white\" }} aria-label=\"select\">\r\n                <option value=\"\">sortBy</option>\r\n                <option value=\"id\">ID</option>\r\n                <option value=\"purchaseValue\">PurchaseValue</option>\r\n              </select>\r\n            </aside>\r\n\r\n            <aside className=\"col-md-2 mt-2 mt-md-0 mb-2 mb-md-0\">\r\n              <select className=\"form-control\" onChange={handleSelectOrderChange} style={{ background: \"white\" }} aria-label=\"select\">\r\n                <option value=\"\">sortOrder</option>\r\n                <option value=\"ASC\">ASC</option>\r\n                <option value=\"DESC\">DESC</option>\r\n              </select>\r\n            </aside>\r\n\r\n            <aside className=\"col-md-2 mt-2 mt-md-0 mb-2 mb-md-0\">\r\n              <select className=\"form-control\" onChange={handleSelectStatusChange} style={{ background: \"white\" }} aria-label=\"select\">\r\n                <option value=\"\">STATUS</option>\r\n                <option value=\"1\">Active</option>\r\n                <option value=\"2\">Hold</option>\r\n                <option value=\"0\">Deleted</option>\r\n              </select>\r\n            </aside>\r\n          </div>\r\n\r\n          <div className=\"row my-2\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"resp-table purchases-tb\">\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>ID</th>\r\n                          <th>UserID</th>\r\n                          <th>PurchaseStatus</th>\r\n                          <th>PurchaseValue</th>\r\n                          <th>PaymentDetails</th>\r\n                          <th>CreatedBy</th>\r\n                          <th>UpdatedBy</th>\r\n                          <th>CreatedAt</th>\r\n                          <th>UpdatedAt</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {isLoading ? (\r\n                          <tr>\r\n                            <td rowSpan=\"10\" colSpan=\"15\">\r\n                              <div className=\"text-center py-5\">\r\n                                <Spinner animation=\"border\" />\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          data?.data?.map((p) => (\r\n                            <tr key={p.id}>\r\n                              <td>{p.id}</td>\r\n                              <td>{p.userId}</td>\r\n                              <td>{p.purchaseStatus}</td>\r\n                              <td>{p.purchaseValue}</td>\r\n                              <td>{p.paymentDetails}</td>\r\n                              <td>\r\n                                {usersData && usersData.data && usersData.data.find(user => user.id === p.createdBy) ? (\r\n                                  (() => {\r\n                                    const user = usersData.data.find(user => user.id === p.createdBy);\r\n                                    return `${user.firstName || 'N/A'} ${user.lastName || 'N/A'}`;\r\n                                  })()\r\n                                ) : p.createdBy}\r\n                              </td>\r\n                              <td>\r\n                                {usersData && usersData.data && usersData.data.find(user => user.id === p.updatedBy) ? (\r\n                                  (() => {\r\n                                    const user = usersData.data.find(user => user.id === p.updatedBy);\r\n                                    return `${user.firstName || 'N/A'} ${user.lastName || 'N/A'}`;\r\n                                  })()\r\n                                ) : p.updatedBy}\r\n                              </td>\r\n                              <td>{<DateFormate dateTime={p.createdAt} />}</td>\r\n                              <td>{<DateFormate dateTime={p.updatedAt} />}</td>\r\n                              <td>\r\n                                <Status code={p.status} />\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n                  {!isLoading ? (\r\n                    <CustomPagination\r\n                      page={page}\r\n                      pageSize={pageSize}\r\n                      data={data}\r\n                      setPage={setPage}\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","CustomPagination","_ref","page","pageSize","data","setPage","_jsxs","className","children","_jsx","role","concat","length","count","style","display","justifyContent","Pagination","itemClass","prevPageText","nextPageText","linkClass","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","hideFirstLastPages","onChange","DateFormate","dateTime","formattedDate","Date","toLocaleString","day","month","year","hour","minute","hour12","Status","props","code","Purchases","useQueryClient","_data$data","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","selectValueID","setSelectValueID","_useState5","_useState6","selectValueOrder","setSelectValueOrder","_useState7","_useState8","selectValueStatus","setSelectValueStatus","_useState9","_useState10","selectValue","setSelectValue","_useState11","_useState12","_useQuery","useQuery","queryKey","queryFn","pageIndex","arguments","undefined","get","then","res","fetchPurchases","keepPreviousData","refetch","isLoading","_useState13","_useState14","usersData","setUsersData","useEffect","console","log","catch","_Fragment","event","newSelect","target","value","background","newSelectID","newSelectOrder","newSelectStatus","rowSpan","colSpan","Spinner","animation","map","p","id","userId","purchaseStatus","purchaseValue","paymentDetails","find","user","createdBy","firstName","lastName","updatedBy","createdAt","updatedAt","status"],"sourceRoot":""}